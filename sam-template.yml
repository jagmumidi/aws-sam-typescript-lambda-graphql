AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: 'SAM template for Serverless framework service: '
Resources:
  ServerlessGraphqlDevGraphql:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: lambda.handler
      Runtime: nodejs10.x
      CodeUri: >-
        .
      MemorySize: 128
      Timeout: 300
      Environment:
        Variables:
          NAME: tom
          GRAPHQL_ENDPOINT: /graphql
          IS_OFFLINE: true
          PGUSER: postgres
          PGHOST: postgres
          PGPASSWORD: passw0rd
          PGDATABASE: VEHICLES
          PGPORT: 5432
      Events:
        Event1:
          Type: Api
          Properties:
            Path: /graphql
            Method: any
            RestApiId:
              Ref: ServerlessGraphql
  ServerlessGraphql:
    Type: 'AWS::Serverless::Api'
    Properties:
      StageName: dev
      DefinitionBody:
        swagger: '2.0'
        info:
          title:
            Ref: 'AWS::StackName'
        paths:
          /graphql:
            options:
              x-amazon-apigateway-integration:
                type: mock
                requestTemplates:
                  application/json: '{ "statusCode" : 200 }'
                responses:
                  default:
                    statusCode: 200
                    responseParameters:
                      method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
                      method.response.header.Access-Control-Allow-Methods: '''any'''
                      method.response.header.Access-Control-Allow-Origin: '''*'''
                    responseTemplates:
                      application/json: '{}'
              responses:
                '200':
                  headers:
                    Access-Control-Allow-Headers:
                      type: string
                    Access-Control-Allow-Methods:
                      type: string
                    Access-Control-Allow-Origin:
                      type: string
            any:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri:
                  'Fn::Sub': >-
                    arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ServerlessGraphqlDevGraphql.Arn}/invocations
                responses:
                  default:
                    statusCode: 200
                    responseParameters:
                      method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
                      method.response.header.Access-Control-Allow-Methods: '''any'''
                      method.response.header.Access-Control-Allow-Origin: '''*'''
                    responseTemplates:
                      application/json: '{}'
              responses:
                '200':
                  headers:
                    Access-Control-Allow-Headers:
                      type: string
                    Access-Control-Allow-Methods:
                      type: string
                    Access-Control-Allow-Origin:
                      type: string
  ServerlessGraphqlDevGraphqlLambdaPermission:
    Type: 'AWS::Lambda::Permission'
    DependsOn:
      - ServerlessGraphqlDevGraphql
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName:
        Ref: ServerlessGraphqlDevGraphql
      Principal: apigateway.amazonaws.com
